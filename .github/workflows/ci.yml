name: putty-rs CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['main']

env:
  PROTOC_VERSION: '25.3'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Build (${{ matrix.os }})
    steps:
      - uses: actions/checkout@v4

      # Linux-only native deps needed for *building* some crates
      - if: runner.os == 'Linux'
        name: Linux build deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pkg-config libudev-dev
      # Cross‑platform protoc
      - uses: arduino/setup-protoc@v3
        with:
          version: ${{ env.PROTOC_VERSION }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: cargo build --verbose


  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update -y && sudo apt-get install -y pkg-config libudev-dev
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update -y &&
             sudo apt-get install -y pkg-config libudev-dev
      - uses: arduino/setup-protoc@v3
        with:
          version: ${{ env.PROTOC_VERSION }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings

# Unit + regular integration tests  (NO `hw-tests` feature)
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Tests (${{ matrix.os }})
    steps:
      - uses: actions/checkout@v4

      - if: runner.os == 'Linux'
        name: Linux deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pkg-config libudev-dev

      - uses: arduino/setup-protoc@v3
        with:
          version: ${{ env.PROTOC_VERSION }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run unit & regular integration tests
        run: cargo test --all   # ← feature flag deliberately left off

  hw_tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: HW tests (${{ matrix.os }})
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      # Tools the hw_* tests need
      - if: runner.os == 'Linux'
        name: Install hw-deps (Linux)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            pkg-config libudev-dev \
            socat openssh-client openssh-server
          sudo mkdir -p /run/sshd        # sshd expects this path

      - if: runner.os == 'macOS'
        name: Install hw-deps (macOS)
        run: |
          brew install socat openssh

      - uses: arduino/setup-protoc@v3
        with:
          version: ${{ env.PROTOC_VERSION }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run hardware tests
        run: cargo test -p putty_core --features hw-tests -- --nocapture
